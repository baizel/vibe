{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { orderAPI } from \"../services/api\";\nconst initialState = {\n  orders: [],\n  currentOrder: null,\n  isLoading: false,\n  error: null\n};\nexport const createOrder = createAsyncThunk(\"orders/create\", async orderData => {\n  const response = await orderAPI.createOrder(orderData);\n  return response;\n});\nexport const fetchOrders = createAsyncThunk(\"orders/fetchAll\", async () => {\n  const response = await orderAPI.getOrders();\n  return response;\n});\nexport const fetchOrder = createAsyncThunk(\"orders/fetchOne\", async orderId => {\n  const response = await orderAPI.getOrder(orderId);\n  return response;\n});\nconst orderSlice = createSlice({\n  name: \"orders\",\n  initialState,\n  reducers: {\n    clearCurrentOrder: state => {\n      state.currentOrder = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createOrder.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createOrder.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.orders.unshift(action.payload);\n      state.currentOrder = action.payload;\n    }).addCase(createOrder.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message || \"Failed to create order\";\n    }).addCase(fetchOrders.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchOrders.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.orders = action.payload;\n    }).addCase(fetchOrders.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message || \"Failed to fetch orders\";\n    }).addCase(fetchOrder.fulfilled, (state, action) => {\n      state.currentOrder = action.payload;\n    });\n  }\n});\nexport const {\n  clearCurrentOrder\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","orderAPI","initialState","orders","currentOrder","isLoading","error","createOrder","orderData","response","fetchOrders","getOrders","fetchOrder","orderId","getOrder","orderSlice","name","reducers","clearCurrentOrder","state","extraReducers","builder","addCase","pending","fulfilled","action","unshift","payload","rejected","message","actions","reducer"],"sources":["/Users/baizel/project/fresh-trio/mobile/src/store/orderSlice.ts"],"sourcesContent":["// src/store/orderSlice.ts - Orders State Management\nimport { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { orderAPI } from \"../services/api\";\n\ninterface Order {\n  id: string;\n  items: Array<{\n    product: any;\n    quantity: number;\n    unitPrice: number;\n  }>;\n  totalAmount: number;\n  status:\n    | \"pending\"\n    | \"confirmed\"\n    | \"prepared\"\n    | \"out_for_delivery\"\n    | \"delivered\"\n    | \"cancelled\";\n  deliveryDate: string;\n  address: any;\n  createdAt: string;\n}\n\ninterface OrderState {\n  orders: Order[];\n  currentOrder: Order | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: OrderState = {\n  orders: [],\n  currentOrder: null,\n  isLoading: false,\n  error: null,\n};\n\n// Async thunks\nexport const createOrder = createAsyncThunk(\n  \"orders/create\",\n  async (orderData: any) => {\n    const response = await orderAPI.createOrder(orderData);\n    return response;\n  }\n);\n\nexport const fetchOrders = createAsyncThunk(\"orders/fetchAll\", async () => {\n  const response = await orderAPI.getOrders();\n  return response;\n});\n\nexport const fetchOrder = createAsyncThunk(\n  \"orders/fetchOne\",\n  async (orderId: string) => {\n    const response = await orderAPI.getOrder(orderId);\n    return response;\n  }\n);\n\nconst orderSlice = createSlice({\n  name: \"orders\",\n  initialState,\n  reducers: {\n    clearCurrentOrder: (state) => {\n      state.currentOrder = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Create Order\n      .addCase(createOrder.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(createOrder.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.orders.unshift(action.payload);\n        state.currentOrder = action.payload;\n      })\n      .addCase(createOrder.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.error.message || \"Failed to create order\";\n      })\n      // Fetch Orders\n      .addCase(fetchOrders.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchOrders.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.orders = action.payload;\n      })\n      .addCase(fetchOrders.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.error.message || \"Failed to fetch orders\";\n      })\n      // Fetch Single Order\n      .addCase(fetchOrder.fulfilled, (state, action) => {\n        state.currentOrder = action.payload;\n      });\n  },\n});\n\nexport const { clearCurrentOrder } = orderSlice.actions;\nexport default orderSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}