{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  items: [],\n  total: 0\n};\nvar cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: function addToCart(state, action) {\n      var _action$payload = action.payload,\n        product = _action$payload.product,\n        quantity = _action$payload.quantity;\n      var existingItem = state.items.find(function (item) {\n        return item.product.id === product.id;\n      });\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          product: product,\n          quantity: quantity\n        });\n      }\n      state.total = state.items.reduce(function (sum, item) {\n        return sum + item.product.price * item.quantity;\n      }, 0);\n    },\n    removeFromCart: function removeFromCart(state, action) {\n      state.items = state.items.filter(function (item) {\n        return item.product.id !== action.payload;\n      });\n      state.total = state.items.reduce(function (sum, item) {\n        return sum + item.product.price * item.quantity;\n      }, 0);\n    },\n    updateQuantity: function updateQuantity(state, action) {\n      var _action$payload2 = action.payload,\n        productId = _action$payload2.productId,\n        quantity = _action$payload2.quantity;\n      var item = state.items.find(function (item) {\n        return item.product.id === productId;\n      });\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(function (item) {\n            return item.product.id !== productId;\n          });\n        } else {\n          item.quantity = quantity;\n        }\n      }\n      state.total = state.items.reduce(function (sum, item) {\n        return sum + item.product.price * item.quantity;\n      }, 0);\n    },\n    clearCart: function clearCart(state) {\n      state.items = [];\n      state.total = 0;\n    }\n  }\n});\nvar _cartSlice$actions = cartSlice.actions,\n  addToCart = _cartSlice$actions.addToCart,\n  removeFromCart = _cartSlice$actions.removeFromCart,\n  updateQuantity = _cartSlice$actions.updateQuantity,\n  clearCart = _cartSlice$actions.clearCart;\nexport { addToCart, removeFromCart, updateQuantity, clearCart };\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","total","cartSlice","name","reducers","addToCart","state","action","_action$payload","payload","product","quantity","existingItem","find","item","id","push","reduce","sum","price","removeFromCart","filter","updateQuantity","_action$payload2","productId","clearCart","_cartSlice$actions","actions","reducer"],"sources":["/Users/baizel/project/fresh-trio/mobile/src/store/cartSlice.ts"],"sourcesContent":["// src/store/cartSlice.ts - Cart State Management\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  imageUrl: string;\n  unit: string;\n}\n\ninterface CartItem {\n  product: Product;\n  quantity: number;\n}\n\ninterface CartState {\n  items: CartItem[];\n  total: number;\n}\n\nconst initialState: CartState = {\n  items: [],\n  total: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (\n      state,\n      action: PayloadAction<{ product: Product; quantity: number }>\n    ) => {\n      const { product, quantity } = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.product.id === product.id\n      );\n\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({ product, quantity });\n      }\n\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    removeFromCart: (state, action: PayloadAction<string>) => {\n      state.items = state.items.filter(\n        (item) => item.product.id !== action.payload\n      );\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    updateQuantity: (\n      state,\n      action: PayloadAction<{ productId: string; quantity: number }>\n    ) => {\n      const { productId, quantity } = action.payload;\n      const item = state.items.find((item) => item.product.id === productId);\n\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(\n            (item) => item.product.id !== productId\n          );\n        } else {\n          item.quantity = quantity;\n        }\n      }\n\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    clearCart: (state) => {\n      state.items = [];\n      state.total = 0;\n    },\n  },\n});\n\nexport const { addToCart, removeFromCart, updateQuantity, clearCart } =\n  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}