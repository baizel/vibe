{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useAuth } from \"../context/AuthContext\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProductsScreen from \"../screens/ProductsScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport OrdersScreen from \"../screens/OrdersScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport ProductDetailScreen from \"../screens/ProductDetailScreen\";\nimport CheckoutScreen from \"../screens/CheckoutScreen\";\nimport OrderTrackingScreen from \"../screens/OrderTrackingScreen\";\nimport DriverDashboard from \"../screens/driver/DriverDashboard\";\nimport DriverRouteScreen from \"../screens/driver/DriverRouteScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar CustomerTabNavigator = function CustomerTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case \"Home\":\n              iconName = focused ? \"home\" : \"home-outline\";\n              break;\n            case \"Products\":\n              iconName = focused ? \"grid\" : \"grid-outline\";\n              break;\n            case \"Cart\":\n              iconName = focused ? \"basket\" : \"basket-outline\";\n              break;\n            case \"Orders\":\n              iconName = focused ? \"receipt\" : \"receipt-outline\";\n              break;\n            case \"Profile\":\n              iconName = focused ? \"person\" : \"person-outline\";\n              break;\n            default:\n              iconName = \"help-outline\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#2ECC71\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Products\",\n      component: ProductsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Cart\",\n      component: CartScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Orders\",\n      component: OrdersScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar DriverTabNavigator = function DriverTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          switch (route.name) {\n            case \"Dashboard\":\n              iconName = focused ? \"speedometer\" : \"speedometer-outline\";\n              break;\n            case \"Routes\":\n              iconName = focused ? \"map\" : \"map-outline\";\n              break;\n            case \"Profile\":\n              iconName = focused ? \"person\" : \"person-outline\";\n              break;\n            default:\n              iconName = \"help-outline\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#3498DB\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Dashboard\",\n      component: DriverDashboard\n    }), _jsx(Tab.Screen, {\n      name: \"Routes\",\n      component: DriverRouteScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nexport default function MainNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: (user == null ? void 0 : user.role) === \"driver\" ? _jsx(Stack.Screen, {\n      name: \"DriverTabs\",\n      component: DriverTabNavigator\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"CustomerTabs\",\n        component: CustomerTabNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"ProductDetail\",\n        component: ProductDetailScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Checkout\",\n        component: CheckoutScreen\n      }), _jsx(Stack.Screen, {\n        name: \"OrderTracking\",\n        component: OrderTrackingScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","createStackNavigator","Ionicons","useAuth","HomeScreen","ProductsScreen","CartScreen","OrdersScreen","ProfileScreen","ProductDetailScreen","CheckoutScreen","OrderTrackingScreen","DriverDashboard","DriverRouteScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","CustomerTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","DriverTabNavigator","_ref3","_ref4","MainNavigator","_useAuth","user","headerShown","role"],"sources":["/Users/baizel/project/fresh-trio/mobile/src/navigation/MainNavigator.tsx"],"sourcesContent":["import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useAuth } from \"../context/AuthContext\";\n\n// Screens\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProductsScreen from \"../screens/ProductsScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport OrdersScreen from \"../screens/OrdersScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport ProductDetailScreen from \"../screens/ProductDetailScreen\";\nimport CheckoutScreen from \"../screens/CheckoutScreen\";\nimport OrderTrackingScreen from \"../screens/OrderTrackingScreen\";\nimport DriverDashboard from \"../screens/driver/DriverDashboard\";\nimport DriverRouteScreen from \"../screens/driver/DriverRouteScreen\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst CustomerTabNavigator = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        switch (route.name) {\n          case \"Home\":\n            iconName = focused ? \"home\" : \"home-outline\";\n            break;\n          case \"Products\":\n            iconName = focused ? \"grid\" : \"grid-outline\";\n            break;\n          case \"Cart\":\n            iconName = focused ? \"basket\" : \"basket-outline\";\n            break;\n          case \"Orders\":\n            iconName = focused ? \"receipt\" : \"receipt-outline\";\n            break;\n          case \"Profile\":\n            iconName = focused ? \"person\" : \"person-outline\";\n            break;\n          default:\n            iconName = \"help-outline\";\n        }\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: \"#2ECC71\",\n      tabBarInactiveTintColor: \"gray\",\n    })}\n  >\n    <Tab.Screen name=\"Home\" component={HomeScreen} />\n    <Tab.Screen name=\"Products\" component={ProductsScreen} />\n    <Tab.Screen name=\"Cart\" component={CartScreen} />\n    <Tab.Screen name=\"Orders\" component={OrdersScreen} />\n    <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n  </Tab.Navigator>\n);\n\nconst DriverTabNavigator = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        switch (route.name) {\n          case \"Dashboard\":\n            iconName = focused ? \"speedometer\" : \"speedometer-outline\";\n            break;\n          case \"Routes\":\n            iconName = focused ? \"map\" : \"map-outline\";\n            break;\n          case \"Profile\":\n            iconName = focused ? \"person\" : \"person-outline\";\n            break;\n          default:\n            iconName = \"help-outline\";\n        }\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: \"#3498DB\",\n      tabBarInactiveTintColor: \"gray\",\n    })}\n  >\n    <Tab.Screen name=\"Dashboard\" component={DriverDashboard} />\n    <Tab.Screen name=\"Routes\" component={DriverRouteScreen} />\n    <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n  </Tab.Navigator>\n);\n\nexport default function MainNavigator() {\n  const { user } = useAuth();\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {user?.role === \"driver\" ? (\n        <Stack.Screen name=\"DriverTabs\" component={DriverTabNavigator} />\n      ) : (\n        <>\n          <Stack.Screen name=\"CustomerTabs\" component={CustomerTabNavigator} />\n          <Stack.Screen name=\"ProductDetail\" component={ProductDetailScreen} />\n          <Stack.Screen name=\"Checkout\" component={CheckoutScreen} />\n          <Stack.Screen name=\"OrderTracking\" component={OrderTrackingScreen} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}