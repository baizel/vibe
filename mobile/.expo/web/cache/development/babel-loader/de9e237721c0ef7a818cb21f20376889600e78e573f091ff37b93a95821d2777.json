{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  total: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const existingItem = state.items.find(item => item.product.id === product.id);\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          product,\n          quantity\n        });\n      }\n      state.total = state.items.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item.product.id !== action.payload);\n      state.total = state.items.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const item = state.items.find(item => item.product.id === productId);\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item.product.id !== productId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n      state.total = state.items.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    },\n    clearCart: state => {\n      state.items = [];\n      state.total = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","total","cartSlice","name","reducers","addToCart","state","action","product","quantity","payload","existingItem","find","item","id","push","reduce","sum","price","removeFromCart","filter","updateQuantity","productId","clearCart","actions","reducer"],"sources":["/Users/baizel/project/fresh-trio/mobile/src/store/cartSlice.ts"],"sourcesContent":["// src/store/cartSlice.ts - Cart State Management\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  imageUrl: string;\n  unit: string;\n}\n\ninterface CartItem {\n  product: Product;\n  quantity: number;\n}\n\ninterface CartState {\n  items: CartItem[];\n  total: number;\n}\n\nconst initialState: CartState = {\n  items: [],\n  total: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (\n      state,\n      action: PayloadAction<{ product: Product; quantity: number }>\n    ) => {\n      const { product, quantity } = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.product.id === product.id\n      );\n\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({ product, quantity });\n      }\n\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    removeFromCart: (state, action: PayloadAction<string>) => {\n      state.items = state.items.filter(\n        (item) => item.product.id !== action.payload\n      );\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    updateQuantity: (\n      state,\n      action: PayloadAction<{ productId: string; quantity: number }>\n    ) => {\n      const { productId, quantity } = action.payload;\n      const item = state.items.find((item) => item.product.id === productId);\n\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(\n            (item) => item.product.id !== productId\n          );\n        } else {\n          item.quantity = quantity;\n        }\n      }\n\n      state.total = state.items.reduce(\n        (sum, item) => sum + item.product.price * item.quantity,\n        0\n      );\n    },\n\n    clearCart: (state) => {\n      state.items = [];\n      state.total = 0;\n    },\n  },\n});\n\nexport const { addToCart, removeFromCart, updateQuantity, clearCart } =\n  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AACA,SAASA,WAAW,QAAuB,kBAAkB;AAoB7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAEA,CACTC,KAAK,EACLC,MAA6D,KAC1D;MACH,MAAM;QAAEC,OAAO;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC5C,MAAMC,YAAY,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAClCC,IAAI,IAAKA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKN,OAAO,CAACM,EACxC,CAAC;MAED,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACF,QAAQ,IAAIA,QAAQ;MACnC,CAAC,MAAM;QACLH,KAAK,CAACN,KAAK,CAACe,IAAI,CAAC;UAAEP,OAAO;UAAEC;QAAS,CAAC,CAAC;MACzC;MAEAH,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACN,KAAK,CAACgB,MAAM,CAC9B,CAACC,GAAG,EAAEJ,IAAI,KAAKI,GAAG,GAAGJ,IAAI,CAACL,OAAO,CAACU,KAAK,GAAGL,IAAI,CAACJ,QAAQ,EACvD,CACF,CAAC;IACH,CAAC;IAEDU,cAAc,EAAEA,CAACb,KAAK,EAAEC,MAA6B,KAAK;MACxDD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACoB,MAAM,CAC7BP,IAAI,IAAKA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKP,MAAM,CAACG,OACvC,CAAC;MACDJ,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACN,KAAK,CAACgB,MAAM,CAC9B,CAACC,GAAG,EAAEJ,IAAI,KAAKI,GAAG,GAAGJ,IAAI,CAACL,OAAO,CAACU,KAAK,GAAGL,IAAI,CAACJ,QAAQ,EACvD,CACF,CAAC;IACH,CAAC;IAEDY,cAAc,EAAEA,CACdf,KAAK,EACLC,MAA8D,KAC3D;MACH,MAAM;QAAEe,SAAS;QAAEb;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC9C,MAAMG,IAAI,GAAGP,KAAK,CAACN,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKQ,SAAS,CAAC;MAEtE,IAAIT,IAAI,EAAE;QACR,IAAIJ,QAAQ,IAAI,CAAC,EAAE;UACjBH,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACoB,MAAM,CAC7BP,IAAI,IAAKA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKQ,SAChC,CAAC;QACH,CAAC,MAAM;UACLT,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;QAC1B;MACF;MAEAH,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACN,KAAK,CAACgB,MAAM,CAC9B,CAACC,GAAG,EAAEJ,IAAI,KAAKI,GAAG,GAAGJ,IAAI,CAACL,OAAO,CAACU,KAAK,GAAGL,IAAI,CAACJ,QAAQ,EACvD,CACF,CAAC;IACH,CAAC;IAEDc,SAAS,EAAGjB,KAAK,IAAK;MACpBA,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,KAAK,GAAG,CAAC;IACjB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEc,cAAc;EAAEE,cAAc;EAAEE;AAAU,CAAC,GACnErB,SAAS,CAACsB,OAAO;AACnB,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}